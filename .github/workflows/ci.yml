name: CI

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-and-upload:
    name: Build and upload
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust_versions: ["1.75"]
        build: [macos-aarch64, macos-x86_64, linux-aarch64, linux-x86_64]
        include:
          - build: macos-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
          - build: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
          - build: linux-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - build: linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Release Version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust_versions }}
          targets: ${{ matrix.target }}

      - name: Build Linux
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
          cross build --verbose --release --target ${{ matrix.target }}

      - name: Build MacOS
        if: matrix.os == 'macos-latest'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build Archive
        shell: bash
        run: |
          binary_name="insdexer"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}

      - name: Checksums
        uses: wangzuo/action-release-checksums@v1

